// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id  Int @id @default(autoincrement())
  created_at DateTime @default(now())
  modified_at DateTime @updatedAt
  email String @unique
  username String @db.VarChar(50)
  password String
  first_name String
  last_name String
  telephone Int
  address Address @relation(fields: [addressId], references: [id])
  addressId Int
  reservations Reservation[]
  carts Cart[]
  orders Order[]
  payments Payment[]
}

model Address{
  id Int @id @default(autoincrement())
  created_at DateTime @default(now())
  modified_at DateTime @updatedAt
  address_title String @db.VarChar(50)
  address_details String
  recipient_name String
  postal_code Int
  provinsi String @db.VarChar(50)
  kabupaten_kota String @db.VarChar(50)
  kecamatan String @db.VarChar(50)
  recipient_phone Int
  users User[]
}

model Reservation {
  id Int @id @default(autoincrement())
  created_at DateTime @default(now())
  modified_at DateTime @updatedAt
  reservation_name String @db.VarChar(50)
  booking_start DateTime
  booking_end DateTime
  num_of_people Int
  table_number Int
  payment_method Int
  status Int
  user User @relation(fields:[userId], references: [id])
  userId Int
}

model Menu{
  id Int @id @default(autoincrement())
  start_date DateTime
  end_date DateTime
  status Int
  menuitems MenuItem[]
}

model MenuItem{
  id Int @id @default(autoincrement())
  quantity Int
  total_price Float
  product Product @relation(fields: [productId], references: [id])
  productId Int
  menu Menu @relation(fields: [menuId], references: [id])
  menuId Int
}

model Product{
  id Int @id @default(autoincrement())
  product_type String @db.VarChar(50)
  product_name String @db.VarChar(50)
  product_description String @db.VarChar(150)
  unit_price Int
  menuItems MenuItem[]
  cartItems CartItem[]
  OrderItems OrderItem[]
}

model Cart{
  id Int @id @default(autoincrement())
  session_id Int
  user User @relation(fields: [userId], references: [id])
  userId Int
  cartItems CartItem[]
}

model CartItem{
  id Int @id @default(autoincrement())
  quantity Int
  total_price Float
  cart Cart @relation(fields: [cartId], references: [id])
  cartId Int
  product Product @relation(fields: [productId], references: [id])
  productId Int
}

model Order {
  id Int @id @default(autoincrement())
  order_date DateTime
  courier String @db.VarChar(50)
  shipment_number Int
  status Int
  user User @relation(fields: [userId], references: [id])
  userId Int
  orderitems OrderItem[]
  payments Payment[]
}
model OrderItem{
  id Int @id @default(autoincrement())
  quantity Int
  order Order @relation(fields: [orderId], references: [id])
  orderId Int
  product Product @relation(fields: [productId], references: [id])
  productId Int
}

model Payment{
  id Int @id @default(autoincrement())
  payment_date DateTime
  amount Float
  payment_type String @db.VarChar(50)
  order Order @relation(fields: [orderId], references: [id])
  orderId Int
  user User @relation(fields: [userId], references: [id])
  userId Int
}
